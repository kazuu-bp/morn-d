# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on merge
on:
  push:
    branches:
      - main

env:
  PROJECT_ID: 643891213580 # あなたのGoogle CloudプロジェクトIDに置き換えてください
  PROJECT_NAME: prd-morn-d
  SERVICE_ACCOUNT_EMAIL: deploy-to-firebase-prd@prd-morn-d.iam.gserviceaccount.com # あなたのサービスアカウントのメールアドレスに置き換えてください

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    # GitHub ActionsのJobがOIDCトークンを発行することを許可する
    permissions:
      contents: 'read' # コードをチェックアウトするため
      id-token: 'write' # OIDCトークンを生成するため (これがないと認証が失敗します)

    steps:
      - name: Checkout code
        if: github.ref == 'refs/heads/main' 
        uses: actions/checkout@v4

      - name: Install dependencies
        if: github.ref == 'refs/heads/main' 
        run: npm ci
        # working-directoryは不要。ルートにpackage.jsonがあるため。
      
      - name: Install Firebase CLI
        if: github.ref == 'refs/heads/main' 
        run: | 
          npm install -g firebase-tools
          firebase --version

      - name: Authenticate to Google Cloud for Prd
        if: github.ref == 'refs/heads/main' 
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          # ワークロードアイデンティティ連携を使用する設定
          # GCPのサービスアカウントのメールアドレスを指定
          workload_identity_provider: 'projects/${{ env.PROJECT_ID }}/locations/global/workloadIdentityPools/deploy-firebase-prd-pool/providers/firebase-prd-provider'
          # あなたのワークロードIDプールとプロバイダのパスに置き換えてください
          service_account: ${{ env.SERVICE_ACCOUNT_EMAIL }}

      - name: Install Functions dependencies
        if: github.ref == 'refs/heads/main' 
        run: npm ci
        working-directory: functions/ # Functionsのディレクトリパスに合わせる
        # functionsディレクトリ内で完結するので、最初のnpm ciと競合しない。
        # Functionsのコード自体はデプロイ時にFirebaseがビルドしてくれる。
     
        # GitHub Secretsから取得した環境変数を.envとして生成
      - name: Build with production environment variables
        if: github.ref == 'refs/heads/main' 
        run: |
          echo "VITE_APP_FIREBASE_API_KEY=${{ secrets.VITE_APP_FIREBASE_API_KEY }}" > .env
          echo "VITE_APP_FIREBASE_APP_ID=${{ secrets.VITE_APP_FIREBASE_APP_ID }}" >> .env
          echo "VITE_APP_FIREBASE_AUTH_DOMAIN=${{ env.PROJECT_NAME }}.firebaseapp.com" >> .env
          echo "VITE_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_APP_FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "VITE_APP_FIREBASE_PROJECT_ID=${{ env.PROJECT_NAME }}" >> .env
          echo "VITE_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_APP_FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "VITE_APP_BUS_DEPT1=${{ secrets.VITE_APP_BUS_DEPT1 }}" >> .env
          echo "VITE_APP_BUS_DEST1=${{ secrets.VITE_APP_BUS_DEST1 }}" >> .env
          echo "VITE_APP_BUS_DEPT2=${{ secrets.VITE_APP_BUS_DEPT2 }}" >> .env
          echo "VITE_APP_BUS_DEST2=${{ secrets.VITE_APP_BUS_DEST2 }}" >> .env
          # Viteのビルドを実行 (Viteは自動的に.envを読み込む)
          npm run build

      - name: Deploy to Firebase (Functions and Hosting)
        if: github.ref == 'refs/heads/main' 
        run: |
          firebase deploy --only functions,hosting \
          --force \
          --project ${{ env.PROJECT_ID }}

      # ▼▼▼ 差分チェックのステップを追加 ▼▼▼
      - name: Check for Firestore index changes
        id: check_changes # このステップの結果を後で参照するためのID
        run: |
          # Firebaseから現在のインデックス定義を取得し、一時ファイルに保存
          firebase firestore:indexes --project prd-morn-d > remote.indexes.json

          # ローカルの定義ファイル(firestore.indexes.json)とリモートの定義(remote.indexes.json)を比較
          # diff -q は差分があれば終了コード1を、なければ0を返す。-qで内容は表示しない。
          if diff -q firestore.indexes.json remote.indexes.json; then
            echo "✅ No changes detected in Firestore indexes. Skipping deployment."
            echo "should_deploy=false" >> $GITHUB_OUTPUT
          else
            echo "🔍 Changes detected in Firestore indexes. Proceeding to deploy."
            echo "should_deploy=true" >> $GITHUB_OUTPUT
          fi
      
      # ▼▼▼ 差分があった場合のみデプロイを実行 ▼▼▼
      - name: Deploy Firestore indexes if changed
        # 上のステップ(check_changes)の出力(should_deploy)が'true'の場合のみ実行
        if: steps.check_changes.outputs.should_deploy == 'true'
        run: |
          # --forceは、ローカルでインデックスを削除した場合にリモートに反映させるために付けておく
          firebase deploy --only firestore:indexes --project ${{ env.PROJECT_NAME }} --force
      
      
      #####
      - name: Deploy Firestore Rules
        if: github.ref == 'refs/heads/main' 
        run: |
          firebase deploy --only firestore:rules \
          --project ${{ env.PROJECT_NAME }} --force --debug
      

