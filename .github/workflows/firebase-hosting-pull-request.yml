# .github/workflows/firebase-hosting-pull-request-oidc.yml (推奨のOIDC対応版)

name: Deploy to Firebase Hosting on PR (OIDC)

on:
  pull_request:
    branches:
      - main

env:
  PROJECT_ID: 643891213580 # あなたのGoogle Cloudプロジェクト番号に置き換えてください (数字のみ)
  SERVICE_ACCOUNT_EMAIL: deploy-to-firebase-prd@prd-morn-d.iam.gserviceaccount.com # あなたのサービスアカウントのメールアドレスに置き換えてください

jobs:
  build_and_preview:
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write' # OIDC認証のために必須
      pull-requests: write # PRコメント投稿のために必要

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # OIDC認証
      - name: Authenticate to Google Cloud (OIDC)
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: 'projects/${{ env.PROJECT_ID }}/locations/global/workloadIdentityPools/deploy-firebase-prd-pool/providers/firebase-prd-provider'
          service_account: ${{ env.SERVICE_ACCOUNT_EMAIL }}

      - name: Install dependencies & build frontend
        run: npm ci && npm run build

      # Firebase CLI をインストール
      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      # Firebase CLI を直接実行してデプロイ
      - name: Deploy to Firebase Hosting Preview Channel
        id: deploy
        run: |
          firebase hosting:channel:deploy \
            --project ${{ env.PROJECT_ID }} \
            --expire 7d \ # プレビューチャンネルの有効期限（例: 7日間）
            --only hosting \
            ${{ github.event.pull_request.head.ref }} # PRのブランチ名をチャンネルIDとして利用
            
        # デプロイ後に生成されるURLを取得し、PRにコメントする
        # これは少し複雑になるため、必要に応じて実装を検討
        # Firebase CLI の出力からURLをパースするロジックが必要になります。
        # 例: output=$(firebase hosting:channel:deploy ... --json)
        # preview_url=$(echo "$output" | jq -r '.result.url')
        # echo "Preview URL: $preview_url" >> $GITHUB_STEP_SUMMARY
        # github-script アクションなどを使ってコメントする

      # PRにプレビューURLをコメントする（Firebase CLIの出力から取得するなど）
      # これは別途実装が必要ですが、非常に有用です。
      - name: Add preview URL to PR comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          header: 'firebase-preview'
          message: |
            🚀 Live Preview available at: [${{ steps.deploy.outputs.url }}](${{ steps.deploy.outputs.url }})
          append: false
