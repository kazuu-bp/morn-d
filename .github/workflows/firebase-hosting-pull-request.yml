# .github/workflows/firebase-hosting-pull-request-oidc.yml (推奨のOIDC対応版)

name: Deploy to Firebase Hosting on PR (OIDC)

on:
  pull_request:
    branches:
      - main

env:
  PROJECT_ID: 643891213580
  PROJECT_NAME: prd-morn-d
  SERVICE_ACCOUNT_EMAIL: deploy-to-firebase-prd@prd-morn-d.iam.gserviceaccount.com # サービスアカウントのメールアドレス

jobs:
  build_and_preview:
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write' # OIDC認証のために必須
      pull-requests: 'write' # PRコメント投稿のために必要

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # OIDC認証
      - name: Authenticate to Google Cloud (OIDC)
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: 'projects/${{ env.PROJECT_ID }}/locations/global/workloadIdentityPools/deploy-firebase-prd-pool/providers/firebase-prd-provider'
          service_account: ${{ env.SERVICE_ACCOUNT_EMAIL }}

      - name: Install dependencies
        run: npm ci
      
      # Firebase CLI をインストール
      - name: Install Firebase CLI
        run: npm install -g firebase-tools

     # GitHub Secretsから取得した環境変数を.envとして生成
      - name: Build with production environment variables
        run: |
          echo "VITE_APP_FIREBASE_API_KEY=${{ secrets.VITE_APP_FIREBASE_API_KEY }}" > .env
          echo "VITE_APP_FIREBASE_APP_ID=${{ secrets.VITE_APP_FIREBASE_APP_ID }}" >> .env
          echo "VITE_APP_FIREBASE_AUTH_DOMAIN=${{ env.PROJECT_NAME }}.firebaseapp.com" >> .env
          echo "VITE_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_APP_FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "VITE_APP_FIREBASE_PROJECT_ID=${{ env.PROJECT_NAME }}" >> .env
          echo "VITE_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_APP_FIREBASE_STORAGE_BUCKET }}" >> .env
          # Viteのビルドを実行 (Viteは自動的に.envを読み込む)
          npm run build

      # Firebase CLI を直接実行してデプロイ
      - name: Deploy to Firebase Hosting Preview Channel
        id: deploy
        run: |
          DEPLOY_RESULT=$(firebase hosting:channel:deploy ${{ github.event.pull_request.head.ref }} \
            --project ${{ env.PROJECT_ID }} \
            --expires 1d \
            --json)
          echo "Full DEPLOY_RESULT JSON:"
          echo "$DEPLOY_RESULT"

          DEPLOY_URL=$(echo "$DEPLOY_RESULT" | jq -r '."result"."${{ env.PROJECT_NAME }}"."url"')
          
          echo "deploy_url=$DEPLOY_URL" >> $GITHUB_OUTPUT

      # PRにプレビューURLをコメントする
      - name: Add preview URL to PR comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          header: 'firebase-preview'
          message: |
            🚀 Live Preview available at: [${{ steps.deploy.outputs.deploy_url }}](${{ steps.deploy.outputs.deploy_url }})
          append: false
